openapi: 3.0.3
info:
  title: NeoScan Master API
  description: NeoScan Master 服务器API接口文档
  version: 1.0.0
  contact:
    name: NeoScan Team
    email: support@neoscan.com

servers:
  - url: http://localhost:8123
    description: 本地开发服务器

paths:
  # 健康检查接口
  /api/health:
    get:
      tags:
        - 健康检查
      summary: 健康检查
      description: 检查服务器健康状态
      responses:
        '200':
          description: 服务器健康
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  timestamp:
                    type: string
                    example: ""

  /api/ready:
    get:
      tags:
        - 健康检查
      summary: 就绪检查
      description: 检查服务器就绪状态
      responses:
        '200':
          description: 服务器就绪
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ready
                  timestamp:
                    type: string
                    example: ""

  /api/live:
    get:
      tags:
        - 健康检查
      summary: 存活检查
      description: 检查服务器存活状态
      responses:
        '200':
          description: 服务器存活
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: alive
                  timestamp:
                    type: string
                    example: ""

  # 认证接口
  /api/v1/auth/login:
    post:
      tags:
        - 认证
      summary: 用户登录
      description: 用户登录获取JWT令牌
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: 用户名
                  example: admin
                password:
                  type: string
                  description: 密码
                  example: admin123
      responses:
        '200':
          description: 登录成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 用户名或密码错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - 认证
      summary: 获取登录表单
      description: 获取登录表单页面
      responses:
        '200':
          description: 登录表单页面
          content:
            text/html:
              schema:
                type: string

  /api/v1/auth/refresh:
    post:
      tags:
        - 认证
      summary: 刷新令牌
      description: 使用刷新令牌获取新的访问令牌
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refresh_token
              properties:
                refresh_token:
                  type: string
                  description: 刷新令牌
      responses:
        '200':
          description: 刷新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: 刷新令牌无效
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/refresh-header:
    post:
      tags:
        - 认证
      summary: 从请求头刷新令牌
      description: 从Authorization头刷新令牌
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 刷新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: 令牌无效
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/check-expiry:
    post:
      tags:
        - 认证
      summary: 检查令牌过期时间
      description: 检查令牌过期时间
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
                  description: JWT令牌
      responses:
        '200':
          description: 检查成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  expires_at:
                    type: string
                    format: date-time
                  is_expired:
                    type: boolean

  /api/v1/auth/logout:
    post:
      tags:
        - 认证
      summary: 用户登出
      description: 用户登出，使当前令牌失效
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 登出成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/logout-all:
    post:
      tags:
        - 认证
      summary: 用户全部登出
      description: 用户全部设备登出，使所有令牌失效
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 全部登出成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # 用户信息接口
  /api/v1/user/profile:
    get:
      tags:
        - 用户信息
      summary: 获取当前用户信息
      description: 获取当前登录用户的详细信息
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 获取成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/user/change-password:
    post:
      tags:
        - 用户信息
      summary: 修改用户密码
      description: 修改当前用户密码
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - old_password
                - new_password
              properties:
                old_password:
                  type: string
                  description: 旧密码
                new_password:
                  type: string
                  description: 新密码
      responses:
        '200':
          description: 修改成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: 参数错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/user/permissions:
    get:
      tags:
        - 用户信息
      summary: 获取用户权限
      description: 获取当前用户的权限列表
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 获取成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: string
                    example: ["user:read", "user:write"]
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/user/roles:
    get:
      tags:
        - 用户信息
      summary: 获取用户角色
      description: 获取当前用户的角色列表
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 获取成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: string
                    example: ["admin", "user"]
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # 管理员 - 用户管理
  /api/v1/admin/users/list:
    get:
      tags:
        - 管理员-用户管理
      summary: 获取用户列表
      description: 获取所有用户列表
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: 页码
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: 每页数量
          schema:
            type: integer
            default: 10
        - name: search
          in: query
          description: 搜索关键词
          schema:
            type: string
      responses:
        '200':
          description: 获取成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
                      total:
                        type: integer
                      page:
                        type: integer
                      limit:
                        type: integer
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 权限不足
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/admin/users/create:
    post:
      tags:
        - 管理员-用户管理
      summary: 创建用户
      description: 创建新用户
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  description: 用户名
                email:
                  type: string
                  format: email
                  description: 邮箱
                password:
                  type: string
                  description: 密码
                roles:
                  type: array
                  items:
                    type: string
                  description: 角色列表
                  example: ["user"]
      responses:
        '201':
          description: 创建成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
        '400':
          description: 参数错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 未授权
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: 权限不足
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/admin/users/{id}:
    get:
      tags:
        - 管理员-用户管理
      summary: 获取用户详情
      description: 根据ID获取用户详细信息
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: 用户ID
          schema:
            type: integer
      responses:
        '200':
          description: 获取成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
        '404':
          description: 用户不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - 管理员-用户管理
      summary: 更新用户信息
      description: 更新用户信息
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: 用户ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 用户名
                email:
                  type: string
                  format: email
                  description: 邮箱
                roles:
                  type: array
                  items:
                    type: string
                  description: 角色列表
      responses:
        '200':
          description: 更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          description: 用户不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - 管理员-用户管理
      summary: 删除用户
      description: 删除用户
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: 用户ID
          schema:
            type: integer
      responses:
        '200':
          description: 删除成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          description: 用户不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/admin/users/{id}/activate:
    post:
      tags:
        - 管理员-用户管理
      summary: 激活用户
      description: 激活用户账户
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: 用户ID
          schema:
            type: integer
      responses:
        '200':
          description: 激活成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

  /api/v1/admin/users/{id}/deactivate:
    post:
      tags:
        - 管理员-用户管理
      summary: 停用用户
      description: 停用用户账户
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: 用户ID
          schema:
            type: integer
      responses:
        '200':
          description: 停用成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT令牌认证，格式：Bearer <token>

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: 用户ID
          example: 1
        username:
          type: string
          description: 用户名
          example: admin
        email:
          type: string
          format: email
          description: 邮箱
          example: admin@example.com
        created_at:
          type: string
          format: date-time
          description: 创建时间
        updated_at:
          type: string
          format: date-time
          description: 更新时间
        is_active:
          type: boolean
          description: 是否激活
          example: true
        roles:
          type: array
          items:
            type: string
          description: 角色列表
          example: ["admin"]
        permissions:
          type: array
          items:
            type: string
          description: 权限列表
          example: ["user:read", "user:write", "admin:all"]

    LoginResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: 登录成功
        data:
          type: object
          properties:
            access_token:
              type: string
              description: 访问令牌
            refresh_token:
              type: string
              description: 刷新令牌
            expires_in:
              type: integer
              description: 过期时间（秒）
              example: 86400
            user:
              $ref: '#/components/schemas/User'

    TokenResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            access_token:
              type: string
              description: 新的访问令牌
            expires_in:
              type: integer
              description: 过期时间（秒）

    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: 操作成功
        data:
          type: object
          nullable: true

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          description: 错误代码
          example: UNAUTHORIZED
        message:
          type: string
          description: 错误描述
          example: 未授权访问

tags:
  - name: 健康检查
    description: 服务器健康状态检查接口
  - name: 认证
    description: 用户认证相关接口
  - name: 用户信息
    description: 用户信息管理接口
  - name: 管理员-用户管理
    description: 管理员用户管理接口
  - name: 管理员-角色管理
    description: 管理员角色管理接口
  - name: 管理员-权限管理
    description: 管理员权限管理接口
  - name: 管理员-会话管理
    description: 管理员会话管理接口